<Window x:Class="StarTrekNut.VoiceCom.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:classes="clr-namespace:StarTrekNut.VoiceCom.UI.Classes"
        mc:Ignorable="d"
        Title="Voice Command Interface" MinHeight="460" Height="504.655" MinWidth="1000" Width="1000" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <classes:EntryTypeColorConverter x:Key="EntryColorConverter" />
        <classes:TtsVoiceConverter x:Key="TtsVoiceConverter" />
        <classes:RecognizerInfoConverter x:Key="RecogConverter" />
        <classes:KeyConverter x:Key="KeyConverter" />
        <classes:BoolInverseConverter x:Key="BoolInvConverter" />
        <classes:IsEnabledConverter x:Key="IsEnabledConverter" />
        <classes:VisibilityConverter x:Key="VisibilityConverter" />
        <BitmapImage x:Key="QuestionmarkIcon" UriSource="icons/glyphicons-195-question-sign.png" />
        <BitmapImage x:Key="InfoIcon" UriSource="icons/glyphicons-196-info-sign.png" />
        <BitmapImage x:Key="ExclamationnmarkIcon" UriSource="icons/glyphicons-197-exclamation-sign.png" />
        <BitmapImage x:Key="DownloadIcon" UriSource="icons/glyphicons-201-download.png" />
        <BitmapImage x:Key="LinkIcon" UriSource="icons/glyphicons-51-link.png" />
        <DataTemplate x:Key="KeyButtonTemplate" >
            <StackPanel Width="Auto" Height="Auto">
                <TextBox IsReadOnly="True" Text="{Binding Path=Key, Mode=OneWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="EnableColumnCellTemplate">
            <DockPanel>
                <CheckBox Foreground="DarkBlue" HorizontalAlignment="Center">
                    <CheckBox.IsChecked>
                        <Binding Path="Enabled" Mode="TwoWay" />
                    </CheckBox.IsChecked>
                </CheckBox>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="KeyCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="KeyString" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="TranslationCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="Translation" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="VoiceCommandColumnCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Left" ToolTip="{Binding Path=Grammer, Mode=OneWay}">
                    <TextBlock.Text>
                        <Binding Path="Grammer" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="KeyStrokeColumnCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Left" ToolTip="{Binding Path=KeyStrokes, Mode=OneWay, Converter={StaticResource KeyConverter}}">
                    <TextBlock.Text>
                        <Binding Path="KeyStrokes" Mode="OneWay" Converter="{StaticResource KeyConverter}" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="CommandColumnCellTemplate">
            <DockPanel>
                <Button Tag="DeleteVoiceCommand" ToolTip="Delete voice command" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonDeleteVoiceCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-257-delete.png" Width="20" Height="20"/>
                </Button>
                <Button Tag="CopyVoiceCommand" ToolTip="Copy voice command" Margin="20,0,0,0" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonCopyVoiceCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-512-copy.png" Width="20" Height="20"/>
                </Button>
                <Button Tag="EditVoiceCommand" ToolTip="Edit voice command" Margin="20,0,0,0" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonEditVoiceCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-151-edit.png" Width="20" Height="20"/>
                </Button>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="DeleteColumnCellTemplate">
            <DockPanel>
                <Button Tag="DeleteHotKeyCommand" ToolTip="Delete Pause Key" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="uiButtonRemoveHotKey_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-257-delete.png" Width="20" Height="20"/>
                </Button>
            </DockPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.Content>
        <Grid Name="uiGridMain">
            <Grid.RowDefinitions>
                <RowDefinition Height="218*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <StatusBar Grid.Row="1" Grid.Column="0" Width="Auto" FlowDirection="LeftToRight">
                <Label Name="uiLabelExeName" Content="{Binding Path=SelectedUser.StartupExecutableName}" Width="Auto" Height="Auto"/>
                <Label Name="uiLabelaExeStatus" Content="Not Running" Foreground="Blue" Width="80" Height="Auto"/>
                <Separator/>
                <Label Content="Profile:" Width="Auto" Height="Auto" ToolTip="The currently selected character profile"/>
                <Label Name="wuiLabelWowStatus" Content="{Binding Path=SelectedProfileSettings.ProfileName, Mode=OneWay}" 
                       ToolTip="The currently selected profile"
                       Foreground="Green" Width="Auto" Height="Auto"/>
            </StatusBar>
            <StatusBar Grid.Row="1" Grid.Column="1" FlowDirection="RightToLeft">
                <!--<Button x:Name="uiButtonCancelCharSettings" IsEnabled="False" Click="uiButtonCancelCharSettings_Click" Content="Cancel" 
                    Padding="6,2,6,2"
                    Width="Auto" Height="Auto" ToolTip="Cancel profile and configuration changes and reload from disk." Margin="4,0,0,0" />-->
                <Button x:Name="uiButtonSaveCharSettings" Click="uiButtonSaveCharSettings_Click" Content="Save Settings" Height="Auto"
                    Padding="6,2,6,2"
                    ToolTip="Save profile and configuration information to disk." Width="Auto" Margin="4,0,0,0" />
                <CheckBox Name="uiCheckboxSpeechEnaled" Content="Speech Recognition" FlowDirection="LeftToRight" 
                    IsEnabled="{Binding Path=HasProfileChanges, Mode=OneWay, Converter={StaticResource BoolInvConverter}}"
                    IsChecked="{Binding Path=SpeechProcessor.IsRecognizerRunning, Mode=TwoWay}" Margin="4,0,0,0"
                    ToolTip="{Binding Path=HasProfileChanges, Mode=OneWay, Converter={StaticResource IsEnabledConverter}}"/>
            </StatusBar>
            <StatusBar Grid.Row="1" Grid.Column="2" FlowDirection="RightToLeft">
                <Button Name="uiButtonHelp" ToolTip="Click to open the web page for this application."
                        Click="UiButtonHelp_Click" BorderThickness="0" Background="#00DDDDDD" Margin="4,0,0,0">
                    <Image Source="{StaticResource LinkIcon}" Width="18" Height="18" />
                </Button>
                <Label Visibility="{Binding Path=HasSoftwareUpdateAvailable, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                       ToolTip="A newer version of the software is available.">
                    <Image Source="{StaticResource DownloadIcon}" Width="18" Height="18" />
                </Label>
                <Label Visibility="{Binding Path=HasProfileChanges, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                       ToolTip="Profile changes have disabled Speech Recognition.">
                    <Image Source="{StaticResource InfoIcon}" Width="18" Height="18" />
                </Label>
            </StatusBar>
            <TabControl x:Name="uiTabControl" Margin="0,0,0,0" Grid.ColumnSpan="3">
                <TabItem Header="Log" IsSelected="True">
                    <Grid Background="#FFE5E5E5">

                        <ListView Name="uiListViewLogs" ItemsSource="{Binding Path=Logger.LogEntries, Mode=OneWay}" IsEnabled="True" Margin="10,10,10,10">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Type" Width="80">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                    <TextBlock Foreground="DarkBlue" HorizontalAlignment="Left" ToolTip="{Binding Path=EntryType, Mode=OneWay}">
                                                        <TextBlock.Text>
                                                            <Binding Path="EntryType" Mode="OneWay" />
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DockPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Time" Width="100">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                    <TextBlock Foreground="DarkBlue" HorizontalAlignment="Left" ToolTip="{Binding Path=EntryDateTime, Mode=OneWay}">
                                                        <TextBlock.Text>
                                                            <Binding Path="EntryDateTime" Mode="OneWay" />
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DockPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Message" Width="700">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <DockPanel>
                                                    <TextBlock Foreground="DarkBlue" HorizontalAlignment="Left" ToolTip="{Binding Path=EntryMessage, Mode=OneWay}">
                                                        <TextBlock.Text>
                                                            <Binding Path="EntryMessage" Mode="OneWay" />
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </DockPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="50">
                                        <GridViewColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Button Tag="ClearLogs" Name="uiButtonClearLog" ToolTip="Clear log entries" BorderThickness="0" Background="Transparent" Click="uiButtonClear_Click">
                                                    <Image Source="Icons/glyphicons-257-delete.png" Width="20" Height="20"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.HeaderTemplate>
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate/>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>
                <TabItem Header="Profiles">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="419*"/>
                            <ColumnDefinition Width="280"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="1" x:Name="label" Content="Application:" HorizontalAlignment="Left" Height="26" Margin="10,10,0,0" VerticalAlignment="Top" Width="77"/>
                        <ComboBox Name="uiComboBoxApplication" Grid.Column="1" Margin="87,14,10,0" VerticalAlignment="Top" Height="26"
                                  ItemsSource="{Binding Path=SelectedUser.ExecutableList, Mode=OneWay}"
                                  SelectedItem="{Binding Path=SelectedExecutable, Mode=TwoWay}"
                                  SelectionChanged="UiComboBoxApplication_SelectionChanged" />
                        <Button Grid.Column="1" IsEnabled="True" x:Name="uiButtonAddApplication" Content="Add App" Height="26" Margin="0,45,104,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="66" Click="uiButtonAddExe_Click"/>
                        <Button Grid.Column="1" IsEnabled="True" x:Name="uiButtonRemoveApplication" Content="Remove App" Height="26" Margin="0,45,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="89" Click="uiButtonRemoveApplication_Click"/>

                        <ComboBox x:Name="uiComboBoxSelectedCharacter" IsEnabled="False"
                                  ItemsSource="{Binding Path=SelectedExecutable.ProfileSettingsList}" 
                                  SelectedItem="{Binding Path=SelectedProfileSettings}"
                                  SelectionChanged="uiComboBoxSelectedCharacter_SelectionChanged"
                                  Grid.Column="1" Height="26" Margin="68,100,10,0" VerticalAlignment="Top"/>

                        <Label x:Name="label1" Content="Profile:" Grid.Column="1" HorizontalAlignment="Left" Margin="10,100,0,0" VerticalAlignment="Top" Width="53"/>

                        <GroupBox x:Name="uiGroupBoxCreateProfile" IsEnabled="False" Grid.Column="1" Header="Create Profile" Height="144" Margin="10,175,10,0" VerticalAlignment="Top">
                            <Grid>
                                <Button x:Name="uiButtonAddCharacter" Content="Create" Click="uiButtonAddCharacter_Click" HorizontalAlignment="Left" Margin="14,43,0,0" VerticalAlignment="Top" Width="67" Height="46"/>
                                <RadioButton x:Name="uiRadioButtonNew" GroupName="Character" Content="Empty Character" IsChecked="True" HorizontalAlignment="Left" Margin="87,46,0,0" VerticalAlignment="Top" Width="134"/>
                                <RadioButton x:Name="uiRadioButtonCopy" GroupName="Character" Content="Copy Selected" HorizontalAlignment="Left" Margin="87,66,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                                    <RadioButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform AngleX="-3.366"/>
                                            <RotateTransform/>
                                            <TranslateTransform X="0.441"/>
                                        </TransformGroup>
                                    </RadioButton.RenderTransform>
                                </RadioButton>
                                <Label x:Name="label2" Content="Name:" HorizontalAlignment="Left" Margin="15,10,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="uiTextBoxNewCharacterName" Height="23" Margin="59,13,0,0" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Left" Width="179"/>
                            </Grid>
                        </GroupBox>
                        <Button x:Name="uiButtonRemoveSelectedChar" IsEnabled="False" Click="uiButtonRemoveSelectedChar_Click" Content="Remove Profile" Grid.Column="1" Margin="0,132,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="89" Height="26"/>
                        <ListView Name="uiListViewVoiceCommands" IsEnabled="False" Margin="10"
                                  ItemsSource="{Binding Path=SelectedProfileSettings.VoiceCommandList, Mode=TwoWay}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Enabled" Width="64" CellTemplate="{StaticResource EnableColumnCellTemplate}" />
                                    <GridViewColumn Header="Voice Command" Width="200" CellTemplate="{StaticResource VoiceCommandColumnCellTemplate}" />
                                    <GridViewColumn Header="Keystrokes" Width="260" CellTemplate="{StaticResource KeyStrokeColumnCellTemplate}" />
                                    <GridViewColumn Width="120" CellTemplate="{StaticResource CommandColumnCellTemplate}">
                                        <GridViewColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Button Tag="AddVoiceCommand" Name="uiButtonAddVoiceCommand" ToolTip="Add new voice command" BorderThickness="0" Background="Transparent" Click="UiButtonAddVoiceCommand_Click">
                                                    <Image Source="Icons/glyphicons-191-plus-sign.png" Width="20" Height="20"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.HeaderTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                </TabItem>
                <TabItem Header="Options" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="Auto">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="200*"/>
                        </Grid.ColumnDefinitions>

                        <GroupBox Grid.Column="0" Header="Recognition Settings" Margin="10,0,0,10">
                            <Grid>
                                <Label Content="Voice Recognition Engine:" HorizontalAlignment="Left" Margin="10,1,0,0" VerticalAlignment="Top" Width="150"
                                    ToolTip="Select the installed operating system voice for command acknowledgement." Height="26" />
                                <ComboBox x:Name="uiComboBoxRecognitionEngines" 
                                    ItemsSource="{Binding SpeechProcessor.RecogEngines, Converter={StaticResource RecogConverter}, Mode=OneWay}"
                                    SelectedItem="{Binding SpeechProcessor.SelectedRecognizer, Converter={StaticResource RecogConverter}, Mode=TwoWay}" SelectionChanged="uiComboBoxRecognitionEngines_SelectionChanged" 
                                    Margin="10,27,9.714,0" VerticalAlignment="Top" Height="22"/>

                                <GroupBox Header="Pause Keys" Margin="10,54,10,0" Height="112" VerticalAlignment="Top">
                                    <Grid>
                                        <CheckBox Visibility="Hidden" IsEnabled="False" IsChecked="True" Name="uiCheckboxEnableHotkeys" Content="Enable" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" Margin="10,10,0,0"
                                            ToolTip="This enables an audabile annoucement for each recognized voice command to this application." />
                                        <DataGrid Name="uiGridHotKeys" Margin="0,0,0.286,0" IsReadOnly="True" ItemsSource="{Binding Path=SelectedUser.HotKeysList, Mode=OneWay}" 
                                          AutoGenerateColumns="False" SelectionMode="Single">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Key" Binding="{Binding Mode=OneWay, Converter={StaticResource KeyConverter}}" MinWidth="170"/>
                                                <DataGridTemplateColumn CellTemplate="{StaticResource DeleteColumnCellTemplate}" >
                                                    <DataGridTemplateColumn.Header>
                                                        <Button Tag="AddHotKey" Name="uiButtonAddVoiceCommand" ToolTip="Add Pause Key" BorderThickness="0" Background="Transparent" Click="uiButtonAddHotkey_Click">
                                                            <Image Source="Icons/glyphicons-191-plus-sign.png" Width="20" Height="20"/>
                                                        </Button>
                                                    </DataGridTemplateColumn.Header>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Grid>
                                </GroupBox>

                                <GroupBox Header="Voice Command Acknowledgement" Margin="10,171,10,0" Height="193" VerticalAlignment="Top">
                                    <Grid>
                                        <CheckBox x:Name="uiCheckboxEnableCommandAcknowledgement" Content="Enable" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" 
                                                  Width="Auto" Margin="10,10,0,0" IsChecked="{Binding SelectedUser.StartupTtsSettings.EnableTtsCommandAck, Mode=TwoWay}"
                                    ToolTip="This enables an audible acknowledgement for each recognized voice command to this application." />
                                        <Button x:Name="uiButTestTts" Margin="0,10,10,0" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Right" Width="58" Click="uiButTestTts_Click" Content="Test"/>
                                        <Label Content="Operating System Voice:" HorizontalAlignment="Left" Margin="10,39,0,0" VerticalAlignment="Top" Width="142"
                                    ToolTip="Select the installed operating system voice for command acknowledgement." />
                                        <ComboBox x:Name="uiComboBoxTtsVoices"
                                    ItemsSource="{Binding SpeechProcessor.TtsVoices, Converter={StaticResource TtsVoiceConverter}, Mode=OneWay}"
                                    SelectedItem="{Binding SelectedUser.StartupTtsSettings.SelectedVoice, Converter={StaticResource TtsVoiceConverter}, Mode=OneWay}" Margin="10,70,10,0" VerticalAlignment="Top"
                                    SelectionChanged="uiComboBoxTtsVoices_SelectionChanged"/>

                                        <Label Content="Volume:" HorizontalAlignment="Left" Margin="15,106,0,0" VerticalAlignment="Top" Height="26"/>
                                        <Slider x:Name="uiSliderTtsVolume" Margin="10,132,10,0" VerticalAlignment="Top" Value="{Binding SelectedUser.StartupTtsSettings.SelectedVolume, Mode=TwoWay}" Minimum="0" Maximum="100" 
                                    SmallChange="1" LargeChange="10" TickPlacement="Both" TickFrequency="10" ValueChanged="uiSliderTtsVolume_ValueChanged" />
                                        <TextBlock Margin="73,111,0,0" TextWrapping="Wrap" Text="{Binding SelectedUser.StartupTtsSettings.SelectedVolume, Mode=OneWay}" VerticalAlignment="Top" RenderTransformOrigin="1.615,0.564" HorizontalAlignment="Left" Width="35"/>

                                    </Grid>
                                </GroupBox>

                            </Grid>
                        </GroupBox>

                        <GroupBox Grid.Column="1" Header="Misc Settings" Margin="10,0,0,10">
                            <Grid>
                                <GroupBox Header="Microphone" Margin="10,1,10,0" Height="52" VerticalAlignment="Top">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="6*"/>
                                            <ColumnDefinition Width="23*"/>
                                        </Grid.ColumnDefinitions>
                                        <Label x:Name="uiMicrophoneName" Content="Microphone" Margin="0,0,-0.142,0" VerticalAlignment="Top" Grid.ColumnSpan="2" />
                                    </Grid>
                                </GroupBox>

                                <GroupBox Header="Keystroke Settings" Height="100" Margin="10,57,9.714,0" VerticalAlignment="Top">
                                    <Grid>
                                        <Label Content="Delay (milliseconds):" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="26"/>
                                        <TextBlock Margin="128,15,24.714,0" TextWrapping="Wrap" Text="{Binding Path=SelectedUser.SelectedKeystrokeDelayInMilliSeconds, Mode=OneWay}" VerticalAlignment="Top" RenderTransformOrigin="-0.257,2.143"/>
                                        <Slider x:Name="uiSliderKeyStrokeDelay" Margin="10,41,9.714,0" VerticalAlignment="Top" Value="{Binding SelectedUser.SelectedKeystrokeDelayInMilliSeconds, Mode=TwoWay}" Minimum="100" Maximum="2000" 
                                            SmallChange="1" LargeChange="50" TickPlacement="Both" TickFrequency="50" ValueChanged="uiSliderTtsVolume_ValueChanged" />
                                    </Grid>
                                </GroupBox>
                                <GroupBox Header="Import / Export Application Settings" Margin="11,162,9.714,0" Height="70" VerticalAlignment="Top">
                                    <Grid >
                                        <Button Name="uiButtonImport" Content="Import Settings" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="106" Height="26" Click="UiButtonImport_Click"
                                        ToolTip="Import application settings from an XML file." />
                                        <Button Name="uiButtonExport" Content="Export Settings" Margin="0,10,10,0" Click="UiButtonExport_Click"
                                        ToolTip="Export application settings to an XML file." Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="106" />
                                    </Grid>
                                </GroupBox>
                                <CheckBox x:Name="uiCheckboxEnableSoftwareUpdateChecks" Content="Software Update Check" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" 
                                    Margin="11,237,0,0" IsChecked="{Binding SelectedUser.EnableSoftwareUpdates, Mode=TwoWay}"
                                    ToolTip="Enables/Disables software update checks." />
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Window.Content>
</Window>
