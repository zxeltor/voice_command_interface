<Window x:Class="StarTrekNut.VoiceCom.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:classes="clr-namespace:StarTrekNut.VoiceCom.UI.Classes"
        mc:Ignorable="d"
        Title="Voice Command Interface" MinHeight="460" Height="460" MinWidth="1000" Width="1000" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <classes:EntryTypeColorConverter x:Key="EntryColorConverter" />
        <classes:TtsVoiceConverter x:Key="TtsVoiceConverter" />
        <classes:RecognizerInfoConverter x:Key="RecogConverter" />
        <classes:KeyConverter x:Key="KeyConverter" />
        <classes:BoolInverseConverter x:Key="BoolInvConverter" />
        <classes:IsEnabledConverter x:Key="IsEnabledConverter" />
        <classes:VisibilityConverter x:Key="VisibilityConverter" />
        <BitmapImage x:Key="QuestionmarkIcon" UriSource="icons/glyphicons-195-question-sign.png" />
        <BitmapImage x:Key="InfoIcon" UriSource="icons/glyphicons-196-info-sign.png" />
        <BitmapImage x:Key="ExclamationnmarkIcon" UriSource="icons/glyphicons-197-exclamation-sign.png" />
        <BitmapImage x:Key="DownloadIcon" UriSource="icons/glyphicons-201-download.png" />
        <BitmapImage x:Key="LinkIcon" UriSource="icons/glyphicons-51-link.png" />
        <DataTemplate x:Key="KeyButtonTemplate" >
            <StackPanel Width="Auto" Height="Auto">
                <TextBox IsReadOnly="True" Text="{Binding Path=Key, Mode=OneWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="EnableColumnCellTemplate">
            <DockPanel>
                <CheckBox Foreground="DarkBlue" HorizontalAlignment="Center">
                    <CheckBox.IsChecked>
                        <Binding Path="Enabled" Mode="TwoWay" />
                    </CheckBox.IsChecked>
                </CheckBox>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="KeyCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="KeyString" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="TranslationCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="Translation" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="VoiceCommandColumnCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="Grammer" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="KeyStrokeColumnCellTemplate">
            <DockPanel>
                <TextBlock Foreground="DarkBlue" HorizontalAlignment="Center">
                    <TextBlock.Text>
                        <Binding Path="VisualKeyStrokes" Mode="OneWay" />
                    </TextBlock.Text>
                </TextBlock>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="KeyTranslationCommandColumnCellTemplate">
            <DockPanel>
                <Button ToolTip="Delete key translation" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonDeleteKeyTranslationCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-257-delete.png" Width="20" Height="20"/>
                </Button>
                <Button ToolTip="Edit key translation" Margin="20,0,0,0" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonEditKeyTranslationCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-151-edit.png" Width="20" Height="20"/>
                </Button>
            </DockPanel>
        </DataTemplate>
        <DataTemplate x:Key="CommandColumnCellTemplate">
            <DockPanel>
                <Button Tag="DeleteVoiceCommand" ToolTip="Delete voice command" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonDeleteVoiceCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-257-delete.png" Width="20" Height="20"/>
                </Button>
                <Button Tag="CopyVoiceCommand" ToolTip="Copy voice command" Margin="20,0,0,0" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonCopyVoiceCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-512-copy.png" Width="20" Height="20"/>
                </Button>
                <Button Tag="EditVoiceCommand" ToolTip="Edit voice command" Margin="20,0,0,0" Width="20" Height="20" BorderThickness="0" Background="Transparent" Click="ButtonEditVoiceCommand_Click" CommandParameter="{Binding}">
                    <Image Source="Icons/glyphicons-151-edit.png" Width="20" Height="20"/>
                </Button>
            </DockPanel>
        </DataTemplate>
    </Window.Resources>
    <Window.Content>
        <Grid Name="uiGridMain">
            <Grid.RowDefinitions>
                <RowDefinition Height="218*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20*"/>
            </Grid.ColumnDefinitions>
            <StatusBar Grid.Row="1" Grid.Column="0" Width="Auto" FlowDirection="LeftToRight">
                <!--<Label Name="uiLabelUserName" Width="Auto" Height="Auto" Content="{Binding Path=SelectedUser.UserName}"/>
                <Separator/>-->
                <Label Name="uiLabelExeName" Content="{Binding Path=SelectedUser.StartupExecutableName}" Width="Auto" Height="Auto"/>
                <Label Name="uiLabelaExeStatus" Content="Not Running" Foreground="Blue" Width="80" Height="Auto"/>
                <Separator/>
                <Label Content="Profile:" Width="Auto" Height="Auto" ToolTip="The currently selected character profile"/>
                <Label Name="wuiLabelWowStatus" Content="{Binding Path=SelectedProfileSettings.ProfileName, Mode=OneWay}" 
                       ToolTip="The currently selected profile"
                       Foreground="Green" Width="Auto" Height="Auto"/>
            </StatusBar>
            <StatusBar Grid.Row="1" Grid.Column="1" FlowDirection="RightToLeft">
                <!--<Button x:Name="uiButtonCancelCharSettings" IsEnabled="False" Click="uiButtonCancelCharSettings_Click" Content="Cancel" 
                    Padding="6,2,6,2"
                    Width="Auto" Height="Auto" ToolTip="Cancel profile and configuration changes and reload from disk." Margin="4,0,0,0" />-->
                <Button x:Name="uiButtonSaveCharSettings" Click="uiButtonSaveCharSettings_Click" Content="Save Settings" Height="Auto"
                    Padding="6,2,6,2"
                    ToolTip="Save profile and configuration information to disk." Width="Auto" Margin="4,0,0,0" />
                <CheckBox Name="uiCheckboxSpeechEnaled" Content="Speech Recognition" FlowDirection="LeftToRight" 
                    IsEnabled="{Binding Path=HasProfileChanges, Mode=OneWay, Converter={StaticResource BoolInvConverter}}"
                    IsChecked="{Binding Path=SpeechProcessor.IsRecognizerRunning, Mode=TwoWay}" Margin="4,0,0,0"
                    ToolTip="{Binding Path=HasProfileChanges, Mode=OneWay, Converter={StaticResource IsEnabledConverter}}"/>
            </StatusBar>
            <StatusBar Grid.Row="1" Grid.Column="2" FlowDirection="RightToLeft">
                <Button Name="uiButtonHelp" ToolTip="Click to open the web page for this application."
                        Click="UiButtonHelp_Click" BorderThickness="0" Background="#00DDDDDD" Margin="4,0,0,0">
                    <Image Source="{StaticResource LinkIcon}" Width="18" Height="18" />
                </Button>
                <Label Visibility="{Binding Path=HasSoftwareUpdateAvailable, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                       ToolTip="A newer version of the software is available.">
                    <Image Source="{StaticResource DownloadIcon}" Width="18" Height="18" />
                </Label>
                <Label Visibility="{Binding Path=HasProfileChanges, Mode=OneWay, Converter={StaticResource VisibilityConverter}}"
                       ToolTip="Profile changes have disabled Speech Recognition.">
                    <Image Source="{StaticResource InfoIcon}" Width="18" Height="18" />
                </Label>
            </StatusBar>
            <TabControl x:Name="uiTabControl" Margin="0,0,0,0" Grid.ColumnSpan="3">
                <TabItem Header="Log" IsSelected="True">
                    <Grid Background="#FFE5E5E5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" FlowDirection="RightToLeft"  Height="Auto" Margin="0,0,0,0" VerticalAlignment="Top" Orientation="Horizontal">
                            <Button x:Name="uiButtonClear" Content="Clear"  VerticalAlignment="Center" Width="75" Click="uiButtonClear_Click"/>
                        </StackPanel>

                        <DataGrid x:Name="uiDataGridLog" Grid.Row="1" Margin="0,0,0,0" ItemsSource="{Binding Path=Logger.LogEntries, Mode=OneWay}" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Type" MinWidth="80" IsReadOnly="True" Binding="{Binding Path=EntryType}"/>
                                <DataGridTextColumn Header="Time" MinWidth="100" IsReadOnly="True" Binding="{Binding Path=EntryDateTime}"/>
                                <DataGridTextColumn Header="Message" MinWidth="700" IsReadOnly="True" Binding="{Binding Path=EntryMessage}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </TabItem>
                <TabItem Header="Profiles">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="419*"/>
                            <ColumnDefinition Width="280"/>
                        </Grid.ColumnDefinitions>
                        <!--<DataGrid x:Name="uiDataGridCharacterSettings" ItemsSource="{Binding Path=SelectedProfileSettings.VoiceCommandList, Mode=TwoWay}" AutoGenerateColumns="False" 
                                  Margin="10,41,10,226" SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Voice Command" Binding="{Binding Path=Grammer, Mode=TwoWay}" MinWidth="200"/>
                                <DataGridTextColumn Header="Key Stroke(s)" Binding="{Binding Path=KeyStrokes, Mode=TwoWay}" MinWidth="200" />
                            </DataGrid.Columns>
                        </DataGrid>-->

                        <Label Grid.Column="1" x:Name="label" Content="Application:" HorizontalAlignment="Left" Height="26" Margin="10,10,0,0" VerticalAlignment="Top" Width="77"/>
                        <ComboBox Name="uiComboBoxApplication" Grid.Column="1" Margin="87,14,10,0" VerticalAlignment="Top" Height="26"
                                  ItemsSource="{Binding Path=SelectedUser.ExecutableList, Mode=OneWay}"
                                  SelectedItem="{Binding Path=SelectedExecutable, Mode=TwoWay}"
                                  SelectionChanged="UiComboBoxApplication_SelectionChanged" />
                        <Button Grid.Column="1" IsEnabled="True" x:Name="uiButtonAddApplication" Content="Add App" Height="26" Margin="0,45,104,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="66" Click="uiButtonAddExe_Click"/>
                        <Button Grid.Column="1" IsEnabled="True" x:Name="uiButtonRemoveApplication" Content="Remove App" Height="26" Margin="0,45,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="89" Click="uiButtonRemoveApplication_Click"/>

                        <ComboBox x:Name="uiComboBoxSelectedCharacter" IsEnabled="False"
                                  ItemsSource="{Binding Path=SelectedExecutable.ProfileSettingsList}" 
                                  SelectedItem="{Binding Path=SelectedProfileSettings}"
                                  SelectionChanged="uiComboBoxSelectedCharacter_SelectionChanged"
                                  Grid.Column="1" Height="26" Margin="68,100,10,0" VerticalAlignment="Top"/>

                        <Label x:Name="label1" Content="Profile:" Grid.Column="1" HorizontalAlignment="Left" Margin="10,100,0,0" VerticalAlignment="Top" Width="53"/>

                        <GroupBox x:Name="uiGroupBoxCreateProfile" IsEnabled="False" Grid.Column="1" Header="Create Profile" Height="144" Margin="10,175,10,0" VerticalAlignment="Top">
                            <Grid>
                                <Button x:Name="uiButtonAddCharacter" Content="Create" Click="uiButtonAddCharacter_Click" HorizontalAlignment="Left" Margin="14,43,0,0" VerticalAlignment="Top" Width="67" Height="46"/>
                                <RadioButton x:Name="uiRadioButtonNew" GroupName="Character" Content="Empty Character" IsChecked="True" HorizontalAlignment="Left" Margin="87,46,0,0" VerticalAlignment="Top" Width="134"/>
                                <RadioButton x:Name="uiRadioButtonCopy" GroupName="Character" Content="Copy Selected" HorizontalAlignment="Left" Margin="87,66,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                                    <RadioButton.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform AngleX="-3.366"/>
                                            <RotateTransform/>
                                            <TranslateTransform X="0.441"/>
                                        </TransformGroup>
                                    </RadioButton.RenderTransform>
                                </RadioButton>
                                <Label x:Name="label2" Content="Name:" HorizontalAlignment="Left" Margin="15,10,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="uiTextBoxNewCharacterName" Height="23" Margin="59,13,0,0" TextWrapping="Wrap" VerticalAlignment="Top" HorizontalAlignment="Left" Width="179"/>
                            </Grid>
                        </GroupBox>
                        <Button x:Name="uiButtonRemoveSelectedChar" IsEnabled="False" Click="uiButtonRemoveSelectedChar_Click" Content="Remove Profile" Grid.Column="1" Margin="0,132,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="89" Height="26"/>
                        <!--<Button x:Name="uiButtonAddGrammerKey" Click="uiButtonAddGrammerKey_Click" Content="Add" Height="26" Margin="0,10,90,0" VerticalAlignment="Top" RenderTransformOrigin="1.306,0.5" HorizontalAlignment="Right" Width="62"/>-->
                        <!--<Button x:Name="uiButtonRemoveGrammerKey" Click="uiButtonRemoveGrammerKey_Click" Content="Remove Command" Height="26" Margin="0,10,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="116"/>
                        <Button x:Name="uiButtonAddGrammerKey" IsEnabled="False" Content="Add Command" Height="26" Margin="0,10,146,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="116"/>-->
                        <ListView Name="uiListViewVoiceCommands" IsEnabled="False" Margin="10"
                                  ItemsSource="{Binding Path=SelectedProfileSettings.VoiceCommandList, Mode=TwoWay}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Enabled" Width="64" CellTemplate="{StaticResource EnableColumnCellTemplate}" />
                                    <GridViewColumn Header="Voice Command" Width="300" CellTemplate="{StaticResource VoiceCommandColumnCellTemplate}" />
                                    <GridViewColumn Header="Key Stroke(s)" Width="180" CellTemplate="{StaticResource KeyStrokeColumnCellTemplate}" />
                                    <GridViewColumn Width="120" CellTemplate="{StaticResource CommandColumnCellTemplate}">
                                        <GridViewColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Button Tag="AddVoiceCommand" Name="uiButtonAddVoiceCommand" ToolTip="Add new voice command" BorderThickness="0" Background="Transparent" Click="UiButtonAddVoiceCommand_Click">
                                                    <Image Source="Icons/glyphicons-191-plus-sign.png" Width="20" Height="20"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.HeaderTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <!--<Button x:Name="uiButtonSaveCharSettings" IsEnabled="False" Click="uiButtonSaveCharSettings_Click" Content="Apply Changes" Grid.Column="1" Margin="10,0,0,10" Height="26" VerticalAlignment="Bottom"
                                ToolTip="Save all character profile changes to disk." HorizontalAlignment="Left" Width="112" />
                        <Button x:Name="uiButtonCancelCharSettings" IsEnabled="False"  Click="uiButtonCancelCharSettings_Click" Content="Cancel Changes" Grid.Column="1" Margin="0,0,10,10" HorizontalAlignment="Right" Width="112" Height="26" VerticalAlignment="Bottom"
                                ToolTip="Cancel character profile changes to disk." />-->
                    </Grid>
                </TabItem>
                <TabItem Header="Key Translations" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="Auto">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="192*"/>
                            <ColumnDefinition Width="124*"/>
                            <ColumnDefinition Width="177*"/>
                        </Grid.ColumnDefinitions>
                        <ListView IsEnabled="True" Margin="10"
                                  ItemsSource="{Binding Path=SelectedExecutable.KeyTranslations, Mode=TwoWay}">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Enabled" Width="60" CellTemplate="{StaticResource EnableColumnCellTemplate}" />
                                    <GridViewColumn Header="Key" Width="80" CellTemplate="{StaticResource KeyCellTemplate}" />
                                    <GridViewColumn Header="Translation" Width="100" CellTemplate="{StaticResource TranslationCellTemplate}" />
                                    <GridViewColumn Width="80" CellTemplate="{StaticResource KeyTranslationCommandColumnCellTemplate}" >
                                        <GridViewColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <Button ToolTip="Add new key translation" BorderThickness="0" Background="Transparent" Click="UiButtonAddKeyTranslationCommand_Click">
                                                    <Image Source="Icons/glyphicons-191-plus-sign.png" Width="20" Height="20"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.HeaderTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Label Content="Help:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="150"
                            ToolTip="Select the installed operating system voice for command acknowledgement." Grid.Column="2" Height="26" />
                        <RichTextBox Grid.Column="2" Margin="10,41,10,10" IsReadOnly="True" VerticalScrollBarVisibility="Auto">
                            <FlowDocument>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="What are key translations?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="Key translations are necessary for translating certain keyboard keys before they're sent to a windows application via the Voice Command Interface. It's not likely you'll ever need to modify these."/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="What does the Copy Translations button do?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="You can copy key translations from one application to another.  Clicking on the Copy button will take the key translations from the application selected in the Copy From dropdown, into the Current Application."/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="What does the Restore Defaults button do?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="Clicking the Restore Defaults button will clear, then update the key translations of the Current Application with a new default set. "/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <Label Content="Current Application:" Grid.Column="1" HorizontalAlignment="Left" Height="26" Margin="10,10,0,0" VerticalAlignment="Top" Width="118"/>
                        <Label Name="uiLabelTranslationsCurrentExe" Content="{Binding Path=SelectedExecutable.ExecutableName, Mode=OneWay}" BorderThickness="1" Grid.Column="1" Height="26" Margin="10,36,10,0" VerticalAlignment="Top" BorderBrush="Black" Background="#00000000"/>
                        <GroupBox Grid.Column="1" Header="Copy Translations" Height="93" Margin="10.2,74,10.6,0" VerticalAlignment="Top">
                            <Grid>
                                <Label Content="Copy From:" HorizontalAlignment="Left" Height="26" Margin="10,10,0,0" VerticalAlignment="Top" Width="77"/>
                                <ComboBox Name="uiComboTranslationsCopyFrom" Margin="10,41,0,0" VerticalAlignment="Top" Height="26"
                                  ItemsSource="{Binding SelectedUser.ExecutableList, Mode=OneWay}" />
                                <Button x:Name="uiButtonTranslationsCopyFrom" Content="Copy" Margin="0,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="84" Height="26"
                                    ToolTip="Copy key translations from another application."
                                    Click="UiButtonTranslationsCopyFrom_Click" />
                            </Grid>
                        </GroupBox>
                        <Button Name="uiButtonTranslationsRestore"  Content="Restore Defaults" Grid.Column="1" 
                                Margin="0,185,10.6,0" VerticalAlignment="Top" Height="26"
                                ToolTip="Restore defaults for the Current Application."
                                Click="UiButtonTranslationsRestore_Click" HorizontalAlignment="Right" Width="109" />
                    </Grid>

                </TabItem>
                <TabItem Name="uiTabItemSettings" Header="Recognition">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="304*"/>
                            <ColumnDefinition Width="667*"/>
                        </Grid.ColumnDefinitions>
                        <!--<Label x:Name="label" Content="Select Application:" HorizontalAlignment="Left" Height="26" Margin="10,10,0,0" VerticalAlignment="Top" Width="181"/>-->

                        <GroupBox Header="Microphone" Margin="10,10,9.6,0" Height="52" VerticalAlignment="Top" Grid.Column="0">
                            <Grid>
                                <Label Name="uiMicrophoneName" Content="Microphone" Margin="10,0,10.4,0" VerticalAlignment="Top" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Voice Command Acknowledgement" Margin="10,120,9.6,0" Height="198" VerticalAlignment="Top" Grid.Column="0">
                            <Grid>
                                <CheckBox Name="uiCheckboxEnableCommandAcknowledgement" Content="Enable" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" Margin="10,10,0,0"
                                    IsChecked="{Binding Path=SelectedUser.StartupTtsSettings.EnableTtsCommandAck, Mode=TwoWay}"
                                    ToolTip="This enables an audible acknowledgement for each recognized voice command to this application." />
                                <Button Name="uiButTestTts" Margin="0,10,10,0" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Right" Width="58" Click="uiButTestTts_Click">Test</Button>
                                <Label Content="Operating System Voice:" HorizontalAlignment="Left" Margin="10,39,0,0" VerticalAlignment="Top" Width="142"
                                    ToolTip="Select the installed operating system voice for command acknowledgement." />
                                <ComboBox Name="uiComboBoxTtsVoices"
                                          ItemsSource="{Binding Path=SpeechProcessor.TtsVoices, Mode=OneWay, Converter={StaticResource TtsVoiceConverter}}"
                                          SelectedItem="{Binding Path=SelectedUser.StartupTtsSettings.SelectedVoice, Mode=OneWay, Converter={StaticResource TtsVoiceConverter}}" Margin="10,70,10,0" VerticalAlignment="Top"
                                          SelectionChanged="uiComboBoxTtsVoices_SelectionChanged"/>

                                <Label Content="Volume:" HorizontalAlignment="Left" Margin="15,106,0,0" VerticalAlignment="Top" Height="26"/>
                                <Slider Name="uiSliderTtsVolume" Margin="10,132,10,0" VerticalAlignment="Top" Value="{Binding Path=SelectedUser.StartupTtsSettings.SelectedVolume, Mode=TwoWay}" Minimum="0" Maximum="100" 
                                        SmallChange="1" LargeChange="10" TickPlacement="Both" TickFrequency="10" ValueChanged="uiSliderTtsVolume_ValueChanged" />
                                <TextBlock Margin="73,111,0,0" TextWrapping="Wrap" Text="{Binding Path=SelectedUser.StartupTtsSettings.SelectedVolume, Mode=OneWay}" VerticalAlignment="Top" RenderTransformOrigin="1.615,0.564" HorizontalAlignment="Left" Width="35"/>

                            </Grid>
                        </GroupBox>
                        <RichTextBox Grid.Column="1" Margin="10,41,10,10" IsReadOnly="True" VerticalScrollBarVisibility="Auto">
                            <FlowDocument>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="What Voice Recognition Engine should I select?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="Most people only have the default speech recognition engine provided by Windows. In the rare case you have another one available, you have the option here to select it for use."/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="Note: "/>
                                    </Bold>
                                    <Run Text="Only the default Windows 10 speech recognition engine was tested with this application."/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="Speech recognition isn't always recognizing my voice commands?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="It's recommended you take the time to train the selected speech recognition engine.  If you're using the one provided by Windows, go into Windows (control panel -&gt; Speech Recognition), then select 'Train your computer to better understand you' and complete the wizard. "/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="Why do voice commands occasionally trigger when I don't want them too?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="Audio feedback can trigger voice commands. If you're not using a headset with a mic, or you have something else playing in the background, this can happen."/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="What is Voice Command Acknowledgement?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="When Voice Command Acknowledgement is enabled, the application sends an audio announcement using text to speech to let you know a voice command was triggered.  You have the options to pick which operating system voice it uses, along with a separate volume setting.  If you choose to disable it, you can still see command acknowledgements in the log tab. "/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <Label Content="Voice Recognition Engine:" HorizontalAlignment="Left" Margin="10,67,0,0" VerticalAlignment="Top" Width="150"
                            ToolTip="Select the installed operating system voice for command acknowledgement." Grid.Column="0" Height="26" />

                        <ComboBox x:Name="uiComboBoxRecognitionEngines" 
                            ItemsSource="{Binding Path=SpeechProcessor.RecogEngines, Converter={StaticResource RecogConverter}, Mode=OneWay}"
                            SelectedItem="{Binding Path=SpeechProcessor.SelectedRecognizer, Converter={StaticResource RecogConverter}, Mode=TwoWay}" SelectionChanged="uiComboBoxRecognitionEngines_SelectionChanged" Margin="10,93,9.6,0" VerticalAlignment="Top" Grid.Column="0" Height="22"/>
                        <!--<GroupBox Header="Hotkeys" Margin="10">
                            <Grid>
                                <CheckBox IsEnabled="False" IsChecked="True" Name="uiCheckboxEnableHotkeys" Content="Enable" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" Margin="10,10,0,0"
                                    ToolTip="This enables an audabile annoucement for each recognized voice command to this application." />
                                <Button IsEnabled="True" x:Name="uiButtonAddHotkey" Content="Add" Height="26" Margin="0,4,60,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="50" Click="uiButtonAddHotkey_Click"/>
                                <Button IsEnabled="True" x:Name="uiButtonRemoveHotKey" Content="Remove" Height="26" Margin="0,4,0,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="50" Click="uiButtonRemoveHotKey_Click"/>
                                <DataGrid Name="uiGridHotKeys" Margin="0,35,0,0" IsReadOnly="True" ItemsSource="{Binding Path=SelectedUser.HotKeysList, Mode=OneWay}" 
                                          AutoGenerateColumns="False" SelectionMode="Single">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Key" Binding="{Binding Path=Keys, Mode=OneWay}" MinWidth="200"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </GroupBox>-->
                        <Label Content="Help:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="150"
                            ToolTip="Select the installed operating system voice for command acknowledgement." Grid.Column="2" Height="26" />

                        <!--<GroupBox Grid.Column="1" Header="Import / Export" Margin="10,282,10,10">
                            <Grid >
                                <Button Name="uiButtonImport" Content="Import Settings" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="106" Height="26" Click="UiButtonImport_Click"
                                        ToolTip="Import profile and application settings from an XML file." />
                                <Button Name="uiButtonExport" Content="Export Settings" Margin="0,10,10,0" Click="UiButtonExport_Click"
                                        ToolTip="Export profile and application settings to an XML file." Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="106" />
                            </Grid>
                        </GroupBox>-->
                    </Grid>
                </TabItem>
                <TabItem Header="Options" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="Auto">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="141*"/>
                            <ColumnDefinition Width="352*"/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="Hotkeys" Margin="10,10,10.4,0" Height="197" VerticalAlignment="Top">
                            <Grid>
                                <CheckBox Visibility="Hidden" IsEnabled="False" IsChecked="True" Name="uiCheckboxEnableHotkeys" Content="Enable" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" Margin="10,10,0,0"
                                    ToolTip="This enables an audabile annoucement for each recognized voice command to this application." />
                                <Button IsEnabled="True" x:Name="uiButtonAddHotkey" Content="Add" Height="26" Margin="0,4,60,0" 
                                        ToolTip="Add a Hotkey"
                                        VerticalAlignment="Top" HorizontalAlignment="Right" Width="50" Click="uiButtonAddHotkey_Click"/>
                                <Button IsEnabled="True" x:Name="uiButtonRemoveHotKey" Content="Remove" Height="26" Margin="0,4,0,0" 
                                        ToolTip="Delete a Hotkey"
                                        VerticalAlignment="Top" HorizontalAlignment="Right" Width="50" Click="uiButtonRemoveHotKey_Click"/>
                                <DataGrid Name="uiGridHotKeys" Margin="0,35,0,0" IsReadOnly="True" ItemsSource="{Binding Path=SelectedUser.HotKeysList, Mode=OneWay}" 
                                          AutoGenerateColumns="False" SelectionMode="Single">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Key" Binding="{Binding Path=Keys, Mode=OneWay}" MinWidth="200"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Import / Export" Margin="10,211,10.4,0" Height="70" VerticalAlignment="Top">
                            <Grid >
                                <Button Name="uiButtonImport" Content="Import Settings" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="106" Height="26" Click="UiButtonImport_Click"
                                        ToolTip="Import application settings from an XML file." />
                                <Button Name="uiButtonExport" Content="Export Settings" Margin="0,10,10,0" Click="UiButtonExport_Click"
                                        ToolTip="Export application settings to an XML file." Height="26" VerticalAlignment="Top" HorizontalAlignment="Right" Width="106" />
                            </Grid>
                        </GroupBox>
                        <Label Content="Help:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="150"
                            ToolTip="Select the installed operating system voice for command acknowledgement." Grid.Column="1" Height="26" />
                        <RichTextBox Grid.Column="1" Margin="10,41,10,10" IsReadOnly="True" VerticalScrollBarVisibility="Auto">
                            <FlowDocument>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="What are Hotkeys?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="Hotkeys are used to temporarily disable the triggering of voice commands while a key is pressed. Example would be a push-to-talk key which is configured for use with another application."/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="Why do settings changes disable speech recognition, and force me to save my changes?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="Some changes made in the interface require voice commands to be re-sent to the speech recognition engine.  It's best to allow the user to make bulk changes and force them to manually save changes afterwards, rather then hammering the speech recognition engine with changes with every keystroke."/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="Why have an Import / Export feature?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="This feature allows you to create an xml file backup of your application settings.  You could also use this feature to share your settings with another user of the application. "/>
                                </Paragraph>
                                <Paragraph>
                                    <Bold>
                                        <Run Text="Q: " />
                                    </Bold>
                                    <Run Text="Why Software Update Checks?"/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="A: " />
                                    </Bold>
                                    <Run Text="If enabled, the application checks to see if a newer version is available for download 10 seconds after the application launches."/>
                                    <LineBreak/>
                                    <Bold>
                                        <Run Text="Note: " />
                                    </Bold>
                                    <Run Text="This does not trigger an automated download or update of the software. A download icon displays in the bottom right of the status bar letting you know a newer version is available. It's up to you to manually download and install the newer version of the application."/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                        <CheckBox x:Name="uiCheckboxEnableSoftwareUpdateChecks" Content="Software Update Check" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left" Width="Auto" Margin="10,296,0,0"
                            IsChecked="{Binding SelectedUser.EnableSoftwareUpdates, Mode=TwoWay}"
                            ToolTip="Enables/Disables software update checks." />
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </Window.Content>
</Window>
